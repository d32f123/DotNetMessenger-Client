<Application x:Class="DotNetMessenger.WPFClient.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vm="clr-namespace:DotNetMessenger.WPFClient.ViewModels"
             xmlns:entities="clr-namespace:DotNetMessenger.WPFClient.ViewModels.Entities"
             xmlns:validation="clr-namespace:DotNetMessenger.WPFClient.Validation"
             xmlns:views1="clr-namespace:DotNetMessenger.WPFClient.Views"
             StartupUri="MainWindow.xaml" Exit="App_OnExit" DispatcherUnhandledException="App_OnDispatcherUnhandledException">
    <Application.Resources>
        <DataTemplate DataType="{x:Type ValidationError}">
            <TextBlock FontStyle="Italic" Foreground="Red" HorizontalAlignment="Center" Margin="0,1">
                <TextBlock.Text>
                    <Binding Path="ErrorContent">
                        <Binding.FallbackValue>""</Binding.FallbackValue>
                    </Binding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AllChatsViewModel}">
            <views1:AllChatsView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type entities:EntityViewModel}">
            <views1:EntityView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:AttachmentViewModel}">
            <views1:AttachmentView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:MessageViewModel}">
            <views1:MessageView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:SenderViewModel}">
            <views1:SenderView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type validation:ValidationCustomError}">
            <TextBlock FontStyle="Italic" Foreground="Red" HorizontalAlignment="Center" Margin="0,1" Text="{Binding Path=Description}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:NewChatViewModel}">
            <views1:NewChatView/>
        </DataTemplate>
        <Style x:Key="TransparentSelectionStyle" TargetType="{x:Type ListViewItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <ContentPresenter />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ListViewItemOptionStyle" TargetType="ListViewItem">
            <Setter Property="Template">
                <Setter.Value>
                    <!-- Trun off default selection-->
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border x:Name="Bd" Background="{TemplateBinding Background}">
                            <ContentPresenter 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Background">
                            <Setter.Value>
                                <SolidColorBrush Color="CornflowerBlue" Opacity="0.2"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Foreground" Value="White"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SecondaryLabelStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="SlateGray"></Setter>
        </Style>
        <Style x:Key="NoChromeButton" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid x:Name="Chrome" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                                <Setter Property="Opacity" TargetName="Chrome" Value="0.5"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
